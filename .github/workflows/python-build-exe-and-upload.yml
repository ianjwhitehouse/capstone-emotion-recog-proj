name: Use PyInstaller to Build Exe File and Send to GitHub Release

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1

    steps:
    - uses: actions/checkout@v3
    - name: Add Conda to System Path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install Dependencies using Conda
      run: |
        conda config --append channels https://repo.anaconda.com/pkgs/main
        conda env update --file environment.yml --name base
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --noconsole -n WorkMindfully.exe gui-app.py
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Fixed bugs to improve the user experience
        draft: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./dist/WorkMindfully.exe
        asset_name: WorkMindfully.exe
        asset_content_type: application/exe
